{"ast":null,"code":"const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box'\n};\n\nconst getRowStyles = (props, {\n  instance\n}) => [props, {\n  style: {\n    display: 'flex',\n    width: `${instance.totalColumnsWidth}px`\n  }\n}];\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles);\n  hooks.getHeaderGroupProps.push(getRowStyles);\n  hooks.getFooterGroupProps.push(getRowStyles);\n  hooks.getHeaderProps.push((props, {\n    column\n  }) => [props, {\n    style: { ...cellStyles,\n      width: `${column.totalWidth}px`\n    }\n  }]);\n  hooks.getCellProps.push((props, {\n    cell\n  }) => [props, {\n    style: { ...cellStyles,\n      width: `${cell.column.totalWidth}px`\n    }\n  }]);\n  hooks.getFooterProps.push((props, {\n    column\n  }) => [props, {\n    style: { ...cellStyles,\n      width: `${column.totalWidth}px`\n    }\n  }]);\n};\nuseBlockLayout.pluginName = 'useBlockLayout';","map":{"version":3,"sources":["/Users/ankomah/Desktop/AFI_CONNECT/front_end/node_modules/react-table/src/plugin-hooks/useBlockLayout.js"],"names":["cellStyles","display","boxSizing","getRowStyles","props","instance","style","width","totalColumnsWidth","useBlockLayout","hooks","getRowProps","push","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","column","totalWidth","getCellProps","cell","getFooterProps","pluginName"],"mappings":"AAAA,MAAMA,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE,cADQ;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAAnB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAyB,CAC5CD,KAD4C,EAE5C;AACEE,EAAAA,KAAK,EAAE;AACLL,IAAAA,OAAO,EAAE,MADJ;AAELM,IAAAA,KAAK,EAAG,GAAEF,QAAQ,CAACG,iBAAkB;AAFhC;AADT,CAF4C,CAA9C;;AAUA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACrCA,EAAAA,KAAK,CAACC,WAAN,CAAkBC,IAAlB,CAAuBT,YAAvB;AACAO,EAAAA,KAAK,CAACG,mBAAN,CAA0BD,IAA1B,CAA+BT,YAA/B;AACAO,EAAAA,KAAK,CAACI,mBAAN,CAA0BF,IAA1B,CAA+BT,YAA/B;AAEAO,EAAAA,KAAK,CAACK,cAAN,CAAqBH,IAArB,CAA0B,CAACR,KAAD,EAAQ;AAAEY,IAAAA;AAAF,GAAR,KAAuB,CAC/CZ,KAD+C,EAE/C;AACEE,IAAAA,KAAK,EAAE,EACL,GAAGN,UADE;AAELO,MAAAA,KAAK,EAAG,GAAES,MAAM,CAACC,UAAW;AAFvB;AADT,GAF+C,CAAjD;AAUAP,EAAAA,KAAK,CAACQ,YAAN,CAAmBN,IAAnB,CAAwB,CAACR,KAAD,EAAQ;AAAEe,IAAAA;AAAF,GAAR,KAAqB,CAC3Cf,KAD2C,EAE3C;AACEE,IAAAA,KAAK,EAAE,EACL,GAAGN,UADE;AAELO,MAAAA,KAAK,EAAG,GAAEY,IAAI,CAACH,MAAL,CAAYC,UAAW;AAF5B;AADT,GAF2C,CAA7C;AAUAP,EAAAA,KAAK,CAACU,cAAN,CAAqBR,IAArB,CAA0B,CAACR,KAAD,EAAQ;AAAEY,IAAAA;AAAF,GAAR,KAAuB,CAC/CZ,KAD+C,EAE/C;AACEE,IAAAA,KAAK,EAAE,EACL,GAAGN,UADE;AAELO,MAAAA,KAAK,EAAG,GAAES,MAAM,CAACC,UAAW;AAFvB;AADT,GAF+C,CAAjD;AASD,CAlCM;AAoCPR,cAAc,CAACY,UAAf,GAA4B,gBAA5B","sourcesContent":["const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n"]},"metadata":{},"sourceType":"module"}